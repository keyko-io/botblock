/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { NvmNFT721, NvmNFT721Interface } from "../../contracts/NvmNFT721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_botblockMarket",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expirationBlock",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015e8380380620015e88339810160408190526200003491620000d3565b6040518060400160405280601d81526020017f4e4654373231537562736372697074696f6e5570677261646561626c6500000081525060405180604001604052806006815260200165272b26a9bab160d11b81525081600090816200009a9190620001aa565b506001620000a98282620001aa565b5050600780546001600160a01b0319166001600160a01b0393909316929092179091555062000276565b600060208284031215620000e657600080fd5b81516001600160a01b0381168114620000fe57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200013057607f821691505b6020821081036200015157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001a557600081815260208120601f850160051c81016020861015620001805750805b601f850160051c820191505b81811015620001a1578281556001016200018c565b5050505b505050565b81516001600160401b03811115620001c657620001c662000105565b620001de81620001d784546200011b565b8462000157565b602080601f831160018114620002165760008415620001fd5750858301515b600019600386901b1c1916600185901b178555620001a1565b600085815260208120601f198616915b82811015620002475788860151825594840194600190910190840162000226565b5085821015620002665787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61136280620002866000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101a557806370a08231146101b857806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b314610157578063156e29f61461016c57806323b872dd1461017f57806342842e0e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610ebb565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e9190610f28565b61013f61013a366004610f3b565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610f70565b610361565b005b61016a61017a366004610f9a565b61047b565b61016a61018d366004610fcd565b6104fe565b61016a6101a0366004610fcd565b61052f565b61013f6101b3366004610f3b565b61054a565b6101cb6101c6366004611009565b6105aa565b60405190815260200161010e565b61011f610630565b61016a6101ef366004611024565b61063f565b61016a610202366004611076565b61064e565b61011f610215366004610f3b565b610686565b610102610228366004611152565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b790611185565b80601f01602080910402602001604051908101604052809291908181526020018280546102e390611185565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b6000610345826106fa565b506000908152600460205260409020546001600160a01b031690565b600061036c8261054a565b9050806001600160a01b0316836001600160a01b0316036103de5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103fa57506103fa8133610228565b61046c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103d5565b610476838361075c565b505050565b6007546001600160a01b031633146104ef5760405162461bcd60e51b815260206004820152603160248201527f4f6e6c7920746865206d61726b6574706c616365206f776e65722063616e206360448201527030b636103a3434b990333ab731ba34b7b760791b60648201526084016103d5565b600681905561047683836107ca565b6105083382610955565b6105245760405162461bcd60e51b81526004016103d5906111bf565b6104768383836109d4565b6104768383836040518060200160405280600081525061064e565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103d5565b60006001600160a01b0382166106145760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103d5565b506001600160a01b031660009081526003602052604090205490565b6060600180546102b790611185565b61064a338383610b38565b5050565b6106583383610955565b6106745760405162461bcd60e51b81526004016103d5906111bf565b61068084848484610c06565b50505050565b6060610691826106fa565b60006106a860408051602081019091526000815290565b905060008151116106c857604051806020016040528060008152506106f3565b806106d284610c39565b6040516020016106e392919061120c565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166107595760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103d5565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107918261054a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b0382166108205760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103d5565b6000818152600260205260409020546001600160a01b0316156108855760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103d5565b6000818152600260205260409020546001600160a01b0316156108ea5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103d5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000806109618361054a565b9050806001600160a01b0316846001600160a01b031614806109a857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806109cc5750836001600160a01b03166109c18461033a565b6001600160a01b0316145b949350505050565b826001600160a01b03166109e78261054a565b6001600160a01b031614610a0d5760405162461bcd60e51b81526004016103d59061123b565b6001600160a01b038216610a6f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103d5565b826001600160a01b0316610a828261054a565b6001600160a01b031614610aa85760405162461bcd60e51b81526004016103d59061123b565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610b995760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103d5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c118484846109d4565b610c1d84848484610ccc565b6106805760405162461bcd60e51b81526004016103d590611280565b60606000610c4683610dcd565b600101905060008167ffffffffffffffff811115610c6657610c66611060565b6040519080825280601f01601f191660200182016040528015610c90576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c9a57509392505050565b60006001600160a01b0384163b15610dc257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d109033908990889088906004016112d2565b6020604051808303816000875af1925050508015610d4b575060408051601f3d908101601f19168201909252610d489181019061130f565b60015b610da8573d808015610d79576040519150601f19603f3d011682016040523d82523d6000602084013e610d7e565b606091505b508051600003610da05760405162461bcd60e51b81526004016103d590611280565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109cc565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610e0c5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e38576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e5657662386f26fc10000830492506010015b6305f5e1008310610e6e576305f5e100830492506008015b6127108310610e8257612710830492506004015b60648310610e94576064830492506002015b600a83106102a25760010192915050565b6001600160e01b03198116811461075957600080fd5b600060208284031215610ecd57600080fd5b81356106f381610ea5565b60005b83811015610ef3578181015183820152602001610edb565b50506000910152565b60008151808452610f14816020860160208601610ed8565b601f01601f19169290920160200192915050565b6020815260006106f36020830184610efc565b600060208284031215610f4d57600080fd5b5035919050565b80356001600160a01b0381168114610f6b57600080fd5b919050565b60008060408385031215610f8357600080fd5b610f8c83610f54565b946020939093013593505050565b600080600060608486031215610faf57600080fd5b610fb884610f54565b95602085013595506040909401359392505050565b600080600060608486031215610fe257600080fd5b610feb84610f54565b9250610ff960208501610f54565b9150604084013590509250925092565b60006020828403121561101b57600080fd5b6106f382610f54565b6000806040838503121561103757600080fd5b61104083610f54565b91506020830135801515811461105557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561108c57600080fd5b61109585610f54565b93506110a360208601610f54565b925060408501359150606085013567ffffffffffffffff808211156110c757600080fd5b818701915087601f8301126110db57600080fd5b8135818111156110ed576110ed611060565b604051601f8201601f19908116603f0116810190838211818310171561111557611115611060565b816040528281528a602084870101111561112e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561116557600080fd5b61116e83610f54565b915061117c60208401610f54565b90509250929050565b600181811c9082168061119957607f821691505b6020821081036111b957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161121e818460208801610ed8565b835190830190611232818360208801610ed8565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061130590830184610efc565b9695505050505050565b60006020828403121561132157600080fd5b81516106f381610ea556fea264697066735822122035dd9654ee674b5f4db130e14879fe0f50fd37b4648f247d1420a6566dcfc4f164736f6c63430008110033";

type NvmNFT721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NvmNFT721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NvmNFT721__factory extends ContractFactory {
  constructor(...args: NvmNFT721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _botblockMarket: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NvmNFT721> {
    return super.deploy(_botblockMarket, overrides || {}) as Promise<NvmNFT721>;
  }
  override getDeployTransaction(
    _botblockMarket: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_botblockMarket, overrides || {});
  }
  override attach(address: string): NvmNFT721 {
    return super.attach(address) as NvmNFT721;
  }
  override connect(signer: Signer): NvmNFT721__factory {
    return super.connect(signer) as NvmNFT721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NvmNFT721Interface {
    return new utils.Interface(_abi) as NvmNFT721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NvmNFT721 {
    return new Contract(address, _abi, signerOrProvider) as NvmNFT721;
  }
}
